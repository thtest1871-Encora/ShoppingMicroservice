# Application name and server configuration
spring.application.name=APIGateDemo
server.port=9080

# Eureka client setup for service discovery
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# Use the "secret" profile for loading additional properties
spring.profiles.active=secret

# Disable automatic route discovery (manual route definitions used)
spring.cloud.gateway.discovery.locator.enabled=false
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Route 1: Product Microservice with circuit breaker and path rewrite
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://PRODUCTMICROSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/productmicroservice/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/productmicroservice/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[0].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.name=productCircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.fallbackUri=forward:/fallback/products

# Route 2: Order Microservice with circuit breaker and path rewrite
spring.cloud.gateway.routes[1].id=Order-service
spring.cloud.gateway.routes[1].uri=lb://ORDERSMICROSERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/ordersmicroservice/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/ordersmicroservice/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[1].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.name=orderCircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.fallbackUri=forward:/fallback/orders

# Route 3: Customer Microservice with circuit breaker and path rewrite
spring.cloud.gateway.routes[2].id=Customer-service
spring.cloud.gateway.routes[2].uri=lb://CUSTOMERSERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/customerservice/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/customerservice/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[2].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.name=customerCircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.fallbackUri=forward:/fallback/customer
